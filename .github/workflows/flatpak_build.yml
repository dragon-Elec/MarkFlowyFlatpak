# Workflow name displayed in GitHub Actions tab
name: Build Flatpak

# Define when this workflow should run.
# Triggers on pushes to the main branch.
on:
  push:
    branches:
      - main # Or 'master' if that's your main branch name

# Define the jobs that make up this workflow
jobs:
  build_flatpak:
    # Name of the job
    name: Build MarkFlowy Flatpak
    # Operating system the job will run on
    runs-on: ubuntu-latest

    steps:
      # --- Step 1: Checkout the source code ---
      # Gets the code from your repository, including the Flatpak manifests
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Step 2: Install Flatpak and Flatpak Builder ---
      # Installs the tools needed to build Flatpaks on the runner
      - name: Install Flatpak and Builder
        run: |
          sudo apt-get update
          sudo apt-get install -y flatpak flatpak-builder

      # --- Step 3: Install Flatpak SDK and Runtime ---
      # Installs the specific GNOME 46 SDK and Platform required by your manifest
      # Use 'sudo' because these commands modify the system-wide Flatpak installation
      - name: Install Flatpak SDK and Runtime
        run: |
          flatpak --version # Optional: Check flatpak version
          # Add the Flathub remote SYSTEM-WIDE using sudo
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          echo "Installing GNOME SDK and Platform version 46..."
          # Install the specific SDK version SYSTEM-WIDE using sudo
          sudo flatpak install -y --noninteractive flathub org.gnome.Sdk//46
          # Also install the corresponding runtime SYSTEM-WIDE using sudo
          sudo flatpak install -y --noninteractive flathub org.gnome.Platform//46
          echo "SDK and Platform installation complete."
          # Listing does not require sudo
          flatpak list # Optional: List installed runtimes/sdks to verify

      # --- Step 4: Verify Flatpak Manifest Files ---
      # Checks that the necessary YAML and AppData files exist
      - name: Verify Flatpak files existence
        run: |
          echo "Checking for manifest and appdata files..."
          ls -l com.drl990114.markflowy.yaml
          ls -l com.drl990114.markflowy.appdata.xml
        # This step confirms the files are present after checkout.

      # --- Step 5: Build the Flatpak application ---
      # Runs flatpak-builder using your manifest file.
      # --force-clean: cleans the build directory before starting
      # --repo: directory where the resulting flatpak repository will be created
      - name: Run Flatpak Builder
        run: |
          echo "Starting Flatpak build process..."
          flatpak-builder --force-clean --repo=repo build-dir com.drl990114.markflowy.yaml
          echo "Flatpak build process finished."
        # If this step fails, check the logs in the GitHub Actions UI for build errors inside the manifest.

      # --- Step 6: Archive and upload the built repository ---
      # Makes the 'repo' directory (containing the built Flatpak) available for download
      - name: Upload Flatpak repository artifact
        uses: actions/upload-artifact@v4
        with:
          name: flatpak-repo
          path: repo
          if-no-files-found: error # Error if the repo directory doesn't exist
          # Optional: configure retention days if needed
          # retention-days: 7

      # --- Step 7: (Optional) Create and upload a single .flatpak file ---
      # Bundles the application from the repository into a single file for easier distribution/installation.
      - name: Create and upload Flatpak bundle
        # Only run this step if the build was successful (Step 5 completed)
        if: success()
        run: |
          echo "Creating Flatpak bundle..."
          flatpak build-bundle repo markflowy.flatpak com.drl990114.markflowy
          echo "Bundle created:"
          ls -lh markflowy.flatpak

      - name: Upload Flatpak bundle artifact
        if: success() # Only upload if the bundle was created
        uses: actions/upload-artifact@v4
        with:
          name: markflowy-flatpak-bundle
          path: markflowy.flatpak
          if-no-files-found: error # Error if the bundle wasn't created
          # Optional: configure retention days if needed
          # retention-days: 7
